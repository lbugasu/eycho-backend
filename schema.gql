# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  comments: [Comment!]!
  contributor: User!
  episodes: [Episode!]!
  title: String!
}

type Comment {
  categories: Category!
  content: String!
  likes: [User!]!
  podcast: Podcast!
  userId: User!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Episode {
  categories: [Category!]
  comments: [Comment!]
  datePublished: DateTime!
  description: String
  duration: String
  epNo: Float
  image: String
  likes: [User!]
  locations: [Locale!]
  people: [Person!]
  plays: Play
  podcast: String
  slug: String
  snNo: Float
  sourceUrl: String!
  title: String!
  topics: [Topic!]!
}

type Locale {
  comments: [Comment!]!
  contributor: User!
  podcastEpisodes: [Episode!]!
  title: String!
}

type Mutation {
  """Adds an episode to a player's queue"""
  addToBeginningOfQueue(slug: String!): Play!

  """Adds an episode to a player's queue"""
  addToPlayerQueue(slug: String!): [Play!]!
  bookmarkEpisode(slug: String!): Episode!

  """Changes a user's playing speed"""
  changePlayingSpeed(speed: Float!): Float!

  """Deletes/Clears a user's playing queue"""
  clearQueue: [Play!]!

  """completes the currently playing item and loads the current queue"""
  completeAndGoToNext(playId: String!): [Play!]!

  """Generates the palettes of a podcast based on the podcasts image"""
  generatePalettes(slug: String!): String!
  likeEpisode(slug: String!): Episode!
  likePodcast(slug: String!): Podcast!
  rerunPods: String!

  """Sets a user Volume"""
  setUserVolume(volume: Float!): Float!
  signInWithToken: User!
  signin(password: String!, username: String!): User!
  signout: Boolean!
  signup(email: String!, firstname: String!, lastname: String, password: String, username: String!): User!

  """Starts the playing of a Play object"""
  startPlay(slug: String!): Play!
  subscribeToPodcast(slug: String!): Podcast!

  """Updates the play position of a Play object"""
  updatePlayPosition(playId: Float!, position: Float!): Play!

  """Updates a user's player queue"""
  updatePlayerQueue(queue: String!): Play!

  """Updates the position of a user's Play object"""
  updatePosition(playId: String!, position: Float!): Play!
}

type Person {
  comments: [Comment!]!
  contributor: User!
  podcastEpisodes: [Episode!]!
  title: String!
}

type Play {
  _id: String!
  completed: Boolean

  """The slug of the epiosde"""
  episode: Episode!
  position: Float!
  started: Boolean!
}

type Podcast {
  base64image: String
  categories: [Category!]
  description: String!
  episodes: [String!]
  image: String!
  lastRssBuildDate: DateTime
  link: String
  palette: [String!]!
  publisher: String
  rssFeed: String
  slug: String!
  title: String!
  topics: [Topic!]
}

type Query {
  """Find episodes based on a search string"""
  findEpisodes(searchString: String!): [Episode!]!

  """Searches for a podcast based on a search string"""
  findPodcasts(searchString: String!): [Podcast!]!

  """Returns a list of all the genres"""
  getCategories: [Category!]!
  getCategorySearchRecommendations: [Category!]!
  getComment: Comment

  """Returns the featured podcasts"""
  getFeatured: [Podcast!]!

  """Find a podcast based on it's slug"""
  getPodcast(slug: String!): Podcast!

  """Returns a podcasts'episodes"""
  getPodcastEpisodes(page: Float!, slug: String!): [Episode!]!

  """Get all podcasts"""
  getPodcasts(page: Float!): [Podcast!]!

  """Returns the Most Played Podcasts"""
  getTopPlayed: [Podcast!]!

  """Returns a list of recommended topics"""
  getTopicSearchRecommendations: [Topic!]!

  """Returns the Trending Podcasts"""
  getTrending: [Podcast!]!

  """Returns a user's player queue"""
  getUserQueue: [Play!]!
  print: String!

  """Returns the Most Popular Podcast Episodes"""
  topEpisodes: [Episode!]!
}

type Topic {
  episodes: [Episode!]!
  name: String!
  podcasts: [Podcast!]!
  type: String!
}

type User {
  active: Boolean!
  admin: Boolean!
  authtoken: String!
  bookmarkedEpisodes: [Episode!]!
  contributions: [String!]!
  email: String!
  firstname: String!
  lastname: String!
  likedEpisodes: [Episode!]!
  likedPodcasts: [Podcast!]!
  password: String
  playingSpeed: Float!
  plays: [Play!]!
  queue: [Play!]!
  subscribedPodcasts: [Podcast!]!
  username: String!
  volume: Float!
}
